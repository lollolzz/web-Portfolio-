/* Global */
:root {
  /* root로 정해둔 뒤 필요할경우 var()사용해서 아래에 지정해둔 이름을 넣어주면 미리 설정한 값이 적용된다. */
    /* Color */
    --color-white: #ffffff;
    --color-light-white: #eeeeee;
    --color-dark-white: #bdbdbd;
    --color-pink: #fe918d;
    --color-dark-pink: #ff6863;
    --color-black: #4d4d4d;
    --color-dark-grey: #4d4d4d;
    --color-grey: #616161;
    --color-light-grey: #7c7979;
    --color-blue: #73aace;
    --color-yellow: #fff7d1;
    --color-orange: #feb546;
    --color-black: #000000;
    --color-whitesmoke: #f5f5f5;
    --bs-body-color: #212529;
  
    /* Font size */
    --font-large: 48px;
    --font-medium: 28px;
    --font-regular: 18px;
    --font-small: 16px;
    --font-micro: 14px;
    --bs-body-font-size: 2rem;

    /* Font-family */
    --bs-body-font-family: Source Sans Pro, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;

  
    /* Font weight */
    --weight-bold: 700;
    --weight-semi-bold: 600;
    --weight-regular: 400;
  
    /* Size */
    --size-border-radius: 4px;
  
    /* Annimation */
    --animation-duration: 300ms;
    /* 한 싸이클의 애니메이션이 얼마에 걸쳐 일어날지 지정합니다. */
  }
  
  /* Universal tags */
  * {
    box-sizing: border-box;
    /* box-sizing은 박스의 크기를 어떤 것을 기준으로 계산할지를 정한는 속성입니다. 
    border-box : 테두리를 기준으로 크기를 정합니다.
    content-box : 콘텐트 영역을 기준으로 크기를 정합니다.
    initial : 기본값으로 설정합니다.
    inherit : 부모 요소의 속성값을 상속받습니다.*/
  }
  
  body {
    font-family: 'Open Sans', sans-serif;
    margin: 0;
  }
  
  a {
    text-decoration: none;
    color: var(--bs-body-color);
  }
  
  ul {
    padding-left: 0;
  }
  
  li {
    list-style: none;
  }
  
  button {
    background-color: transparent;
    /* margin영역은 칠하지 않음, 기본값은 transparent(배경색이 없다.) 이다. */
    cursor: pointer;
    border: none;
    outline: none;
    /* border 바깥 외곽선을 말함.
    요소를 두드러지게 보이게 만듬 
    none은 아웃라인을 없앰*/
  }
  
  /* Typography */
  h1 {
    font-size: var(--font-large);
    font-weight: var(--weight-bold);
    color: var(--bs-body-color);
    margin: 16px 0px;
  }
  
  h2 {
    font-size: var(--font-medium);
    font-weight: var(--weight-semi-bold);
    color: var(--bs-body-color);
    margin: 8px 0;
  }
  
  h3 {
    font-size: var(--font-regular);
    font-weight: var(--font-regular);
    color: var(--bs-body-color);
    margin: 8px 0;
  }
  
  p {
    font-size: var(--font-regular);
    font-weight: var(--font-regular);
    color: var(--bs-body-color);
    margin: 14px 0;
  }
  /* Navbar */
  #navbar {
    position: fixed;
    display: flex;
    /* flex는 레이아웃 배치 전용 기능 
    flex 아이템들은 가로 방향으로 배치되고, 자신이 가진 내용물의 width만큼만 차지
    마치 inline 요소들 처럼
    height는 컨테이너의 높이만큼 늘어남
    후에 height를 어떻게 조정할지 조정 가능*/
    justify-content: space-between;
    /* justify-content가로축을 기준으로 좌우에 대한 정렬을 관장
     space-between 요소들 사이에 동일한 간격을 둠  */
    align-items: center;
    /* align-items 세로축을 기준으로 정렬
    컨테이너의 세로 축의 중앙으로 정렬함 */
    padding: 16px;
    background-color: transparent;
    width: 100%;
    transition: all var(--animation-duration) ease-in-out;
    z-index: 1;
  }

  #navbar.navbar--dark{
    background-color: var(--color-white);
    padding: 8px;
  }
  
  .navbar__logo {
    font-size: var(--font-medium);
    font-weight: var(--weight-bold);
    color: var(--bs-body-color);
  }
  
  .navbar__menu {
    display: flex;
  }
  
  .navbar__menu__item {
    padding: 8px 12px;
    margin: 0 4px;
    color: var(--bs-body-color);
    cursor: pointer;
    border: 1px solid transparent;
    border-radius: var(--size-border-radius);
    font-size: var(--font-small);
    font-weight: var(--weight-bold);
    font-family: var(--bs-body-font-family);
  }

  .navbar__menu__item:hover {
    /* border-color: var(--color-white);
    background-color: var(--color-whitesmoke); */
    transform: scale(1.1);
  }
  
  .navbar__toggle-btn {
    position: absolute;
    /* 요소를 일반적인 문서 흐름에서 제거, 페이지 레이아웃 공간도 배정 하지않음
    대신 가장 가까운 위치 지정 조상요소에 대해 상대적으로 배치된다. 단, 조상 중 위치 지정 요소가 
    없다면 초기 컨테이닝 블록을 기준으로 한다. 그리고 최종위치는 top, right, bottom, left
    값이 지정한다 */
    top: 24px;
    right: 32px;
    font-size: 24px;
    color: var(--bs-body-color);
    display: none;
    /* 박스가 생성되자 않고 따라서 공간을 차지 하지도 않는다.
    체크를 해제하면 화면상에 보이지 않던 햄버거가 다시 화면에 보인다 */
  }
  
  /* Home */
  #home {
    background: url('/img/home-background6.png') center/cover no-repeat;
    padding: 40px;
    padding-top: 120px;
    text-align: center;
    /* 인라인 콘텐츠를 줄 상자의 가운데로 정렬 */
  }
  .home__avatar {
    width: 350px;
    height: 325px;
    border-radius: 50%;
    border: 2px solid lightgray;

  }
  
  .home__title,
  .home__description {
    color: var(--bs-body-color);
    font-size: var(--bs-body-font-size);
    font-family: var(--bs-body-font-family);
    font-weight: var(--weight-bold);
  }

  .home__title{
    padding-top: 40px;
  }

  .home__description{
    padding-bottom: 40px;
  }
  
  .home__contact {
    color: var(--bs-body-color);
    font-size: var(--font-regular);
    font-weight: var(--weight-bold);
    font-family: var(--bs-body-font-family);
    margin: 24px;
    padding: 8px 12px;
    border: 4px solid var(--bs-body-color);
    border-radius: var(--size-border-radius);
  }
  
  /* Section common */
  .section {
    padding: 50px;
    text-align: center;
    margin: auto;
  }
  
  .section__container {
    max-width: 1200px;
    /* 보기에 가장 편한 크기 1200px */
    margin: auto;
  }
  
  /* About */
  .about__majors {
    display: flex;
    justify-content: space-between;
    margin: 80px 0;
  }
  
  .major__icon {
    width: 170px;
    height: 170px;
    line-height: 170px;
    font-size: 70px;
    margin: auto;
    color: var(--color-blue);
    border: 1px solid var(--color-blue);
    border-radius: 50%;
    margin-bottom: 16px;
  }
  
  .major__icon i {
    transition: all var(--animation-duration) ease;
  }
  
  .major__icon:hover i {
    /* color: var(--bs-body-color); */
    transform: rotate(-30deg) scale(1.1);
  }
  
  .major__title,
  .major__description {
    color: var(--color-dark-grey);
  }
  
  .major__description {
    font-size: var(--font-small);
  }
  
  .job {
    display: flex;
    align-items: center;
  }
  .job__logo{
    size: 1px;
  }
  
  .job__description {
    margin: 0 16px;
    text-align: left;
  }
  
  .job__name,
  .job__period {
    color: var(--color-light-grey);
  }
  
  .job__name {
    font-size: var(--font-small);
  }
  
  .job__period {
    font-size: var(--font-micro);
  }
  
  /* Skill */
  
  #skills {
    background-color: var(--color-light-white);
  }
  
  .skillset {
    display: flex;
    background-color: var(--color-light-grey);
    color: var(--color-light-white);
    margin: 20px 0;
  }
  
  .skillset__title {
    color: var(--color-white);
  }
  .skillset__left {
    flex-basis: 60%;
    /* 플랙스 항목의 초기 기본 크기를 설정. box-sizing으로 설정하지 않는 한
    내용 상자의 크기를 설정,, flex는 가로로 정렬해주는 느낌  
    skillset에 display: flex를 설정해두 엇기 때문에 
    flex-basis 이것을 쓸 수 있다. */
    background-color: var(--color-dark-grey);
    padding: 20px 40px;
  }
  
  .skill {
    margin-bottom: 32px;
  }
  .skill__description {
    display: flex;
    justify-content: space-between;
  }
  
  .skill__bar {
    width: 100%;
    height: 3px;
    background-color: var(--color-grey);
  }
  
  .skill__value {
    height: 3px;
    background-color: var(--color-orange);
  }
  
  .skillset__right {
    flex-basis: 40%;
  }
  
  .tools {
    background-color: var(--color-grey);
  }
  
  .tools,
  .etc {
    padding: 40px;
  }
  
  /* Work */
  
  .work__categories {
    margin: 40px;
  }
  
  .category__btn {
    border: 1px solid var(--color-dark-white);
    border-radius: var(--size-border-radius);
    font-size: var(--font-regular);
    padding: 8px 48px;
  }
  
  .category__btn.selected,
  .category__btn:hover {
    background-color: var(--color-blue);
    color: var(--color-white);
  }
  
  .category__btn.selected .category__count,
  .category__btn:hover .category__count {
    opacity: 1;
    top: 0;
  }
  
  .category__count {
    background-color: var(--color-orange);
    border-radius: 50%;
    color: var(--color-white);
    width: 24px;
    height: 24px;
    line-height: 24px;
    display: inline-block;
    /* 다른 요소들과 나란히 배치되게 함, 하지만 line의 요소에서 불가능하던
    width와 heigth 속성 지정 및 margin과 padding속성의 상하 간격 지정이 가능 */
    position: relative;
    /* 위치 계산을 할 때 static의 원래 위치부터 계산합니다. */
    top: -20px;
    left: 4px;
    opacity: 0;
    transition: all var(--animation-duration) ease-in;
  }
  
  .work__projects {
    display: flex;
    flex-wrap: wrap;
    /* flex-wrap: 가로크기의 합이 컨테이너의 가로 크기를 넘어갈 때 어떻게 넘어갈 때 어떻게 처리할지 정함
      flex-wrap:wrap으로 지정하면 아이템을 다음 줄로 넘깁니다. */
    justify-content: center;
    opacity: 1;
    transition: all var(--animation-duration) ease-out;
  }

  .work__projects.anim-out{
    opacity: 0;
    transform: scale(0.96) translateY(40px);
  }
  
  .project {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 280px;
    height: 250px;
    margin: 2px;
    background-color: var(--color-light-white);
  }
  .project.invisible{
    display: none;
  }
  
  .project__img {
    max-width: 100%;
    max-height: 100%;
    align-self: center;
    /* align-self 위치 정렬하는 것
    align-self : center 항목을 중앙에 배치  */
  }
  
  .project__description {
    position: absolute;
    background-color: black;
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    opacity: 0;
    transform: translateY(10px);
    transition: all var(--animation-duration) ease-in;
  }
  
  .project:hover .project__description {
    opacity: 0.8;
    transform: translateY(0px);
  }
  
  .project__description h3 {
    color: var(--color-orange);
  }
  
  .project__description h3:after {
    content: '';
    /* 사용법을 잘 모르겟다  */
    display: block;
    position: relative;
    left: 50%;
    width: 50px;
    height: 2px;
    transform: translateX(-50%);
    margin-top: 8px;
    background-color: var(--color-dark-white);
  }

  .project__description span{
    color: var(--color-white);
  }
  
  /* Testimonial */
  #testimonials {
    background-color: var(--color-light-white);
  }
  
  .testimonials {
    margin: 40px;
  }
  
  .testimonial {
    display: flex;
    margin: 32px 0;
  }
  
  .testimonial__avatar {
    width: 150px;
    height: 150px;
    border-radius: 50%;
  }
  
  .testimonial__avatar:nth-child(odd) {
    margin-right: 40px;
  }
  
  .testimonial__avatar:nth-child(even) {
    margin-left: 40px;
  }
  
  .testimonial__speech-bubble {
    padding: 18px;
    background-color: var(--color-white);
    border-radius: var(--size-border-radius);
  }
  
  .testimonial__speech-bubble p {
    color: var(--color-light-grey);
  }
  
  .testimonial__speech-bubble a {
    color: var(--color-pink);
  }
  
  /* Contact */
  #contact {
    background-color: var(--color-pink);
  }
  
  .contact__title,
  .contact__email,
  .contact__rights {
    color: var(--color-white);
  }
  
  .contact__title {
    margin: 32px 0;
  }
  
  .contact__links {
    font-size: var(--font-large);
    margin: 24px 0;
    transition: all var(--animation-duration) ease-in;
  }
  
  .contact__links i:hover {
    transform: scale(1.1);
    color: var(--color-black);
  }
  
/* Scroll */
  .arrow-up{
    position: fixed;
    bottom: 50px;
    right: 50px;
    width: 70px;
    height: 70px;
    font-size: 50px;
    background-color: var(--color-pink);
    color: var(--color-white);
    border-radius: 50%;
    opacity: 0;
    pointer-events: none; 
    /* 클릭안되게 하는 것 */
    transition: all 300ms ease-in;
  }

  .arrow-up.visible{
    opacity: 1;
    pointer-events: auto;
  }

  /* For below 768px screen width */
  /* 미디어 쿼리는 단말기 유형(출력물 vs 화면)과 어떤 특성이나 수치(화면 해상도, 뷰포트 너비 등)에 따라 웹 사이트나 앱의 스타일을 
  수정 할때 유용합니다 */
  @media screen and (max-width: 768px) {
    /* media screen은 주로 화면에 적합하게 출력하게 도와주는 것
    max-width는 미디어 쿼리에서 최대 너비를 설정, 그리고 브라우저의 너비가 max-width 값 이하인 경우에만 적용되는 css
    를 작성 할 수 있다. */

    .navbar__toggle-btn {
      display: block;
      /* div가 갖게 되는 기본값, 기본적으로 width가 자신의 컨테이너의 100%가 되게끔 함
      쉽게 말하면 가로 한 줄을 다 차지 하게 됨  */
    }
  
    #navbar {
      flex-direction: column;
      align-items: flex-start;
      background-color: var(--color-white);
    }
  
    #navbar.navbar--dark{
      padding: 16px;
    }
    .navbar__menu {
      flex-direction: column;
      text-align: center;
      width: 100%;
      display: none;
      /* display: none 화면에서 사라짐, 크기 자체도 차지하지 않는다 */
    }

    .navbar__menu.open{
      display: block;
    }
  
    .about__majors {
      flex-direction: column;
      /*  목록들이 세로방향으로 흐름 (상에서 하로) 
      햄버거 나오는 부분인데 아마 js를 적용 시켜야 햄버거 누를시 항목들이 나올 듯*/
    }
  
    .major {
      margin-bottom: 38px;
    }
  
    .skillset {
      flex-direction: column;
    }
  
    .project {
      flex-grow: 1;
      /* 요소들의 증가 너비 비율을 설정 
      한 가지요소에만 설정해준다면 설정해준 요소에만 적용되어 나버지 들은 작게 나오고 설정해둔 요소에가 
      비율이 적용됨  */
    }
  
    .testimonial__avatar {
      width: 80px;
      height: 80px;
    }
  }
  